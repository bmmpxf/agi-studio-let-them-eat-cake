#include "0-defines.aqi"

if(equaln(vRoomInited, valFalse)) {

    // debugging scenario: Get your orders with this flag high
    // assignn(vEgoX, 55)
    // assignn(vEgoY, 55)
    
    unanimate.all()
    assignn(vRoomInited, valTrue)

    load.view(viewRoger)
    load.view(viewRogerSuitA)
    load.view(viewCloset)
    load.view(viewTram)
    load.view(viewBathroomDoor)
    load.view(viewHangerDoorLeft)

    animate.obj(objEgo)

    set.view(objTram, viewTram)
    set.view(objCloset, viewCloset)
    set.view(objHangingSuit1, viewRogerSuitA)
    set.view(objHangingSuit2, viewRogerSuitA)
    set.view(objBathroomDoor, viewBathroomDoor)
    set.view(objBathroomDoor1, viewBathroomDoor)
    set.view(objHangerDoorLeft, viewHangerDoorLeft)

    if(equaln(vEgoX, 0)) {
        if(equaln(vEgoY, 0)){
            assignn(vEgoX, 10)
            assignn(vEgoY, 126)
            set(fWearingSuit)

            if(!has(invBroom)) {
                // debug teleport case
                get(invBroom)
            }
        }
    }

    if(isset(fWearingSuit)) {
        set.view(objEgo, viewRogerSuitA)
    }
    if(!isset(fWearingSuit)) {
        set.view(objEgo, viewRoger)
        draw(objHangingSuit2)
        position(objHangingSuit2, 43, 95)    
    }

    draw(objEgo)
    draw(objCloset)
    draw(objTram)
    draw(objHangingSuit1)
    draw(objBathroomDoor)
    draw(objBathroomDoor1)
    draw(objHangerDoorLeft)

    stop.cycling(objCloset)
    stop.cycling(objTram)
    stop.cycling(objHangingSuit1)
    stop.cycling(objHangingSuit2)
    stop.cycling(objBathroomDoor)
    stop.cycling(objBathroomDoor1)
    stop.cycling(objHangerDoorLeft)

    set.loop(objBathroomDoor1, 1)
    set.loop(objHangingSuit1, 2)
    set.loop(objHangingSuit2, 2)

    position(objCloset, 100, 101)
    position(objTram, 55, 47)
    position(objBathroomDoor, 60, 98)
    position(objBathroomDoor1, 67, 98)
    position(objHangingSuit1, 35, 95)
    position(objHangerDoorLeft, 6, 131)
   
    set.priority(objEgo, 13)

    assignn(vEgoEdgeTouched, edgeNone)
    position.v(objEgo, vEgoX, vEgoY)

    reset(fDoAction)
}

addn(vTimer, 1)

if(obj.in.box(objEgo, 100, 95, 113, 110)) {
    end.of.loop(objCloset, fDoor2Open)

    if(!isset(fDoor2Open)) {
        load.sound(sndSpaceDoor)
        sound(sndSpaceDoor, fSoundDone)        
    }
}
if(!obj.in.box(objEgo, 100, 95, 113, 110)) {
    if(isset(fDoor2Open)) {
        set.cel(objCloset, 0)
        load.sound(sndSpaceDoor)
        sound(sndSpaceDoor, fSoundDone)    
        reset(fDoor2Open)
        reset(fDoorOpen)
    }
}

if(posn(objEgo, 8, 123, 20, 128)) {
    end.of.loop(objHangerDoorLeft, fDoorOpen)

    if(!isset(fDoorOpen)) {
        load.sound(sndSpaceDoor)
        sound(sndSpaceDoor, fSoundDone)        
    }
    reset(fDoorOpen)
}
if(posn(objEgo, 21, 123, 25, 128)) {
    set.cel(objHangerDoorLeft, 0)
    //end.of.loop(objHangerDoorLeft, 99)
    if(isset(fDoorOpen)) {
        load.sound(sndSpaceDoor)
        sound(sndSpaceDoor, fSoundDone)        
    }
    reset(fDoorOpen)
}

if(obj.in.box(objEgo, 2, 123, 5, 128)) {
    get.posn(objEgo, vEgoX, vEgoY)
    assignn(vEgoX, 146)
    assignn(vEgoY, 141)
    assignn(vRoomInited, valFalse)
    assignn(vEgoEdgeTouched, edgeNone)
    assignn(vCurrentRoom, picHanger)     
}

if(said("push", "button")) {
    if(isset(fWearingSuit)) {
        print("You can't go in there wearing your spacesuit. That could get VERY messy.")
    }
    if(!isset(fWearingSuit)) {
        load.sound(sndSpaceDoor)
        sound(sndSpaceDoor, fSoundDone)    
    
        get.posn(objEgo, vEgoX, vEgoY)
        assignn(vEgoX, 75)
        assignn(vEgoY, 148)
        assignn(vEgoEdgeTouched, edgeNone)
        assignn(vRoomInited, valFalse)
        assignn(vCurrentRoom, picBathroom)
    }
}

if(said("remove", "suit")) {
    if(isset(fWearingSuit)) {
        addn(vCurPoints, 1)
        load.view(viewRoger)
        set.view(objEgo, viewRoger)
        draw(objHangingSuit2)
        position(objHangingSuit2, 43, 95)
        reset(fWearingSuit)    
    }
    if(!isset(fWearingSuit)) {
        print("You are not wearing it.")
    }
}

if(said("enter", "tram")) {
    if(isset(fWearingSuit)) {
        print("You can't get in the tram in your spacesuit.")
    }
    if(!isset(fWearingSuit)) {
        erase(objEgo)
        end.of.loop(objTram, fDoAction)
    }
}

if(isset(fDoAction)) {
    get.posn(objEgo, vEgoX, vEgoY)
    reset(fDoAction)
    assignn(vTimer, 0)
    set(fTramRunning)     
}

if(isset(fTramRunning)) {
    load.sound(sndTramGo)
    sound(sndTramGo, fSoundDone)
 
    reposition(objTram, 4, 0)

    if(equaln(vTimer, 20)) {
        reset(fTramRunning)
        // assignn(vEgoX, 75)
        // assignn(vEgoY, 148)
        assignn(vEgoEdgeTouched, edgeNone)
        assignn(vRoomInited, valFalse)
        assignn(vCurrentRoom, picControlRoom)    
    }
}

if(equaln(vEgoDirection, directionStopped)) {
    stop.cycling(objEgo)
}
if(!equaln(vEgoDirection, directionStopped)) {
    start.cycling(objEgo)
}

if(said("undress")) {
    print("I'll get naked if you get naked. You go first.")
}

if(said("drop", "broom")) {
    drop(invBroom)
    addn(vCurrentScore, 1)
    print("Ok")
}
if(said("take", "broom")) {
    get(invBroom)
    subn(vCurrentScore, 1)
    print("Ok")
}

return()

#message 1 "Inner Bay"