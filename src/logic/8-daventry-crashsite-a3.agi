#include "0-defines.aqi"

if(equaln(vRoomInited, valFalse)) {
    unanimate.all()
    assignn(vRoomInited, valTrue)

    load.view(viewCrashingPod)
    load.view(viewRoger)
    load.view(viewRogerSplash)
    load.view(viewRogerSwim)

    animate.obj(objEgo)

    set.view(objEgo, viewRoger)
    set.view(objCrashingPod, viewCrashingPod)

    draw(objEgo)
    draw(objCrashingPod)

    stop.cycling(objEgo)
    stop.cycling(objCrashingPod)

    set.cel(objCrashingPod, 7)

    position(objCrashingPod, 20, 140)
    set.priority(objCrashingPod, 6)

    if(equaln(vEgoX, 0)) {
        if(equaln(vEgoY, 0)){
            assignn(vEgoX, 13)
            assignn(vEgoY, 140)
        }
    }

    position.v(objEgo, vEgoX, vEgoY)

    assignn(vEgoEdgeTouched, edgeNone)

    load.view(viewGlassSparkle)
    animate.obj(objGlassSparkle)
    start.cycling(objGlassSparkle)
    set.view(objGlassSparkle, viewGlassSparkle)    
    draw(objGlassSparkle)
 }

if(!has(invGlass)) {
    random(1, 100, vDiceRoll)

    if(equaln(vDiceRoll, 40)) {
        position(objGlassSparkle, 32, 147)
        draw(objGlassSparkle)

    }
    if(!equaln(vDiceRoll, 40)) {
        erase(objGlassSparkle)
    }

}

if(!equaln(vEgoEdgeTouched, edgeNone)) {
    if(equaln(vEgoEdgeTouched, edgeBottom)) {
        get.posn(objEgo, vEgoX, vEgoY)
        assignn(vEgoY, 55)
        assignn(vEgoEdgeTouched, edgeNone)
        assignn(vRoomInited, valFalse)
        assignn(vCurrentRoom, picDavRiverBendA4)     
    }

    if(equaln(vEgoEdgeTouched, edgeLeft)) {
        get.posn(objEgo, vEgoX, vEgoY)
        assignn(vEgoX, 150)
        assignn(vEgoEdgeTouched, edgeNone)
        assignn(vRoomInited, valFalse)
        assignn(vCurrentRoom, picDavOgreF3)     
    }
}

if(isset(0)) {
    if(!isset(fSwimming)) {
        if(!isset(fDrowning)){
            set.view(objEgo, viewRogerSplash)
            set(fDrowning)
            assignn(vEgoDirection, directionStopped)
            program.control()
            assignn(vDeathReason, valXsFastWater)
            set(fDead)
        
        }
    }    
}

if(!isset(0)) {
    if(isset(fSwimming)) {
        set.view(objEgo, viewRoger)
        reset(fSwimming)
    }
}

if(said("swim")) {
    if(isset(0)) {
        print("The water is too fast here.")
    }
}

if(equaln(vEgoDirection, directionStopped)) {
    stop.cycling(objEgo)
}
if(!equaln(vEgoDirection, directionStopped)) {
    start.cycling(objEgo)
}


if(said("take", "glass")) {
    if(!has(invGlass)) {
        get(invGlass)
        addn(vCurPoints, 1)    
        print("A small piece of highly reflective safety glass has broken away from the shield as it is known to do. You pick it up and carry it with you.")
    }
}

    
return()
#message 1 "Crash site"