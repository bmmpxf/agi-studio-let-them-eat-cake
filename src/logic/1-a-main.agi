#include "0-defines.aqi"

load.pic(0)
draw.pic(0)
show.pic()

assignn(vGameCycleDelay, 2)
assignn(vEnemyChance, 90)
assignn(vFeatherChance, 90)

if(!isset(fGameInited)) {
    set(fGameInited)    
    assignn(vMaxPoints, 40)
    assignn(vCurPoints, 0)  
}

if(equaln(0, 0)) {  
    assignn(vRoomInited, valFalse)
    // picTitle
    assignn(vCurrentRoom, picTitle)
}

if(said("inv")) {
    status()
}

if(said("save")) {
    save_game()
}

if(said("restore")) {
    restore_game()
}

if(said("cut", "feather")) {
    if(has(invFeather)) {
        if(has(invGlass)) {
            if(isset(fGlassIsSharp)) {
                drop(invFeather)
                get(invQuill)
                addn(vCurPoints, 1)    
                print("You cut the feather into a quill. Roger we are impressed! That's thinking ourside the box - A real FEATHER IN ANY ADVENTURE'S CAP.")
            }
            if(!isset(fGlassIsSharp)) {
                print("The highly reflective saftey glass couldn't cut through hot Monolith butter. It's no use trying.")
            }
        }
    }
}
if(said("make", "quill")) {
    if(has(invFeather)) {
        if(has(invGlass)) {
            if(isset(fGlassIsSharp)) {
                drop(invFeather)
                get(invQuill)
                addn(vCurPoints, 1)    
                print("You cut the feather into a quill. Roger we are impressed! That's thinking ourside the box - A real FEATHER IN ANY ADVENTURE'S CAP.")
            }
            if(!isset(fGlassIsSharp)) {
                print("The highly reflective saftey glass couldn't cut through hot Monolith butter. It's no use trying.")
            }
        }
    }
}
if(said("make", "invitation")) {
    if(has(invQuill)) {
        if(has(invInk)) {
            if(has(invPaper)) {
                drop(invPaper)
                get(invInvitation)
                addn(vCurPoints, 1)
                print("Dipping the quill into the ink you cleverly pen an invitation to the castle.")     
            }
        }
    }
}

if(!equaln(0, 0)) {
    call.v(0)
}

if(isset(fShowInvItem)) {
    reset(fShowInvItem)
    reset(fWaitForCloseInv)

    if(equaln(vInvShowItem, invTeapot)) {
        assignn(vInvView, viewObjPot)
        // if(equaln(vTeaPoured, valTrue)) {
        // print("The blue teapot empty.")
        // }

        // if(!equaln(vTeaPoured, valTrue)) {
        //     print("The blue teapot is full of a hot fragrant tea made from the wild clover from the lands of Daventry.")
        // }
        assignn(19, 0)
        print("The blue teapot is full of a hot fragrant tea made from the wild clover from the lands of Daventry.")
    }

    if(has(invTeapot)) {
        load.view.v(vInvView)
        set.view.v(objInv, vInvView)
        stop.cycling(objInv)
        draw(objInv)
        set.priorty(objInv, 15)
        position(objInv, 65, 155)
        set(fWaitForCloseInv)        
    }
}
if(isset(fWaitForCloseInv)) {
    if(greatern(19, 0)) {
        reset(fWaitForCloseInv)
         erase(objInv)
    }
}

if(isset(fDead)) {
    if(equaln(vDeathReason, valXsGeneric)) {
        print("You are dead. It's been a real hoot watching you play. From here you can only restore or restart. Thanks for playing!")
    }
    if(equaln(vDeathReason, valXsOversleep)) {
        print("You fall asleep and oversleep. Thanks for playing.")
    }
    if(equaln(vDeathReason, valXsNoSuitExplode)) {
        print("Surgeon General's Warning: Exposing yourself to the vacuum of space is hazardous to your health. You are dead. Thanks for playing.")
    }
    if(equaln(vDeathReason, valXsSpaceWalk)) {
        print("You step off the deck and into the vaccume of space. We're not sure where you are going but we know you'll be a popcycle when you arrive. Thanks for playing.")

    }
    if(equaln(vDeathReason, valXsFuelFoot)) {
        print("As your boot touches the fuel spill you immediately feel the boot material begin to melt and seperate. Within moments your suit is breached and decompresses as it equalizes with the vacuum of space. You are dead. Thanks for playing!  As usual you've been a real hoot.")
    }
    if(equaln(vDeathReason, valXsFlushola)) {
        print("Unbelievable! The toilet begins to overflow. Where's a janitor when you need one?! As the room fills with 'WATER' you frantically search for a plunger but find only that you are trapped. How embarrasing. Thank you for playing!")
    }
    if(equaln(vDeathReason, valXsFastWater)) {
        print("Oh no! The water here is too fast to swim. You are overcome by the current and rapids and flushed down river. An end fit for a janitor. Thank you for playing!")
    }
    if(equaln(vDeathReason, valXsOgreMunch)) {
        print("What the ORAT was that? You've just become a snack for a local species of ogre with a serious case of the munchies. He dusts you like bunt cake. Thank you for playing!")
    }
    if(equaln(vDeathReason, valXsDrown)) {
        print("You eventually become tired from struggling. Completely exhausted you slip below the water's surgace and drown. Thank you for playing!")
    }

    
}


return()
#message 1 "Main Loop"