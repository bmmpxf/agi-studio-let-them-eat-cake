#include "0-defines.aqi"

if(equaln(vRoomInited, valFalse)) {
    unanimate.all()
    assignn(vRoomInited, valTrue)

    // testing
    // get(invInvitation)
    // get(invCake)

    load.view(viewRoger)
    load.view(viewRogerSplash)
    load.view(viewRogerSwim)
    load.view(viewCastleFlags)
    load.view(viewCastleCrocs)
    load.view(viewCastleDoors)
    load.view(viewMist)

    animate.obj(objEgo)
    animate.obj(objCastleFlags)
    animate.obj(objCastleCrocs)

    set.view(objEgo, viewRoger)
    set.view(objCastleFlags, viewCastleFlags)
    set.view(objCastleCrocs, viewCastleCrocs)
    set.view(objCastleDoors, viewCastleDoors)
    set.loop(objCastleDoors, 1)
    set.cel(objCastleDoors, 0)
    set.prioity(objCastleDoors, 1)
    set.view(objMist, viewMist)
    set.view(objMist2, viewMist)
   
    stop.cycling(objMist)
    stop.cycling(objMist2)
    stop.cycling(objCastleDoors)

    //object.on.water(objCastleCrocs)

    draw(objEgo)
    draw(objCastleFlags)
    draw(objCastleCrocs)
    draw(objCastleDoors)
    draw(objMist)
    draw(objMist2)

    if(equaln(vEgoX, 0)) {
        stop.cycling(objEgo)

        if(equaln(vEgoY, 0)){
            assignn(vEgoX, 15)
            assignn(vEgoY, 130)
        }
    }

    assignn(vEgoEdgeTouched, edgeNone)

    position(objMist, 1, 40)
    position(objMist2, 30, 40)

    position(objCastleFlags, 115, 20)
    position(objCastleCrocs, 50, 165)
    position(objCastleDoors, 104, 120)
    wander(objCastleCrocs)    

    reset(fDoAction)

    position.v(objEgo, vEgoX, vEgoY)
    set.priority(objCastleDoors, 10)
    set.horizon(40)   
}

if(!equaln(vEgoEdgeTouched, edgeNone)) {
    if(equaln(vEgoEdgeTouched, edgeTop)) {
        print("You're a bit foggy here. You decide to turn back.")
        get.posn(objEgo, vEgoX, vEgoY)
        assignn(vEgoY, 45)
        assignn(vEgoDirection, directionDown)
        set.dir(objEgo, vEgoDirection)
        position.v(objEgo, vEgoX, vEgoY)
        assignn(vEgoEdgeTouched, edgeNone)
    }

    if(equaln(vEgoEdgeTouched, edgeLeft)) {
        get.posn(objEgo, vEgoX, vEgoY)
        assignn(vEgoX, 150)

        assignn(vRoomInited, valFalse)
        assignn(vCurrentRoom, picDavDaggerF2)     
    }

    if(equaln(vEgoEdgeTouched, edgeRight)) {
        get.posn(objEgo, vEgoX, vEgoY)
        assignn(vEgoX, 15)

        assignn(vRoomInited, valFalse)
        assignn(vCurrentRoom, picDavCastleRightB2)     
    }
}

if(isset(0)) {
    if(!isset(fSwimming)) {
        if(!isset(fDrowning)){
            set.view(objEgo, viewRogerSplash)
            set(fDrowning)
            assignn(vEgoDirection, directionStopped)
            program.control()
        }
    }    
}

if(!isset(0)) {
    if(isset(fSwimming)) {
        set.view(objEgo, viewRoger)
        reset(fSwimming)
    }
}

if(said("swim")) {
    if(isset(0)) {
        if(isset(fDrowning)) {
            set.view(objEgo, viewRogerSwim)
            reset(fDrowning)
            set(fSwimming)
            player.control()
            print("ok")
       } 
    }
}

if(equaln(vEgoDirection, directionStopped)) {
    stop.cycling(objEgo)
}
if(!equaln(vEgoDirection, directionStopped)) {
    start.cycling(objEgo)
}

if(said("read", "notice")) {
    if(posn(objEgo, 97, 122, 121, 125)) {
        addn(vCurrentScore, 1)
        print("The notice reads 'Hear Ye! Hear Ye! A party for the King will be held today. Attendees must bring an invitation and a party favor.' The notice gets you thinking. You need to get in here. If anyone can be of service. They will be inside.")
    }
    if(!posn(objEgo, 97, 122, 121, 125)) {
        print("You need to be closer.")
    }
}

if(said("open", "door")) {
    if(posn(objEgo, 97, 122, 121, 125)) {
        if(has(invInvitation)) {
            if(has(invCake)) {
                addn(vCurPoints, 1)    
                end.of.loop(objCastleDoors, fDoAction)
            }
            if(!has(invCake)) {
                print("The doors are locked. On the door is a notice.")
            }
        }
        if(!has(invInvitation)) {
            print("The doors are locked. On the door is a notice.")
        }    
    }
    if(!posn(objEgo, 97, 122, 121, 125)) {
        print("You need to be closer.")
    }
}

if(isset(fDoAction)) {
    get.posn(objEgo, vEgoX, vEgoY)
    assignn(vEgoX, 75)
    assignn(vEgoY, 163)
    assignn(vEgoEdgeTouched, edgeNone)
    assignn(vRoomInited, valFalse)
    assignn(vCurrentRoom, picDavCastleHall)
}

return()

#message 1 "Castle Left"