#include "0-defines.aqi"

if(equaln(vRoomInited, valFalse)) {
    unanimate.all()
    assignn(vRoomInited, valTrue)

    load.view(viewRoger)
    load.view(viewMist)
    load.view(viewBucket)

    animate.obj(objEgo)

    set.view(objEgo, viewRoger)
    set.view(objMist, viewMist)
    set.view(objMist2, viewMist)
    set.view(objMist3, viewMist)
    set.view(objMist4, viewMist)

    set.view(objBucket, viewBucket)

    stop.cycling(objMist)
    stop.cycling(objMist2)
    stop.cycling(objMist3)
    stop.cycling(objMist4)
    stop.cycling(objBucket)

    draw(objEgo)
    draw(objMist)
    draw(objMist2)
    draw(objMist3)
    draw(objMist4)
    draw(objBucket)

    if(equaln(vEgoX, 0)) {
        if(equaln(vEgoY, 0)){
            assignn(vEgoX, 100)
            assignn(vEgoY, 100)
        }
    }

    position(objMist, 1, 47)
    position(objMist2, 43, 47)
    position(objMist3, 85, 47)
    position(objMist4, 127, 47)
    position(objBucket, 38, 120)

    reset(fInBucket)
    reset(fDoAction)
    assignn(vEgoEdgeTouched, edgeNone)
    position.v(objEgo, vEgoX, vEgoY)
    set.horizon(50)
}

if(!equaln(vEgoEdgeTouched, edgeNone)) {
    if(equaln(vEgoEdgeTouched, edgeTop)) {
        print("You're a bit foggy here. You decide to turn back.")
        get.posn(objEgo, vEgoX, vEgoY)
        assignn(vEgoY, 55)
        assignn(vEgoDirection, directionDown)
        set.dir(objEgo, vEgoDirection)
        position.v(objEgo, vEgoX, vEgoY)
        assignn(vEgoEdgeTouched, edgeNone)
    }

    if(equaln(vEgoEdgeTouched, edgeLeft)) {
        print("You're a bit foggy here. You decide to turn back.")
        get.posn(objEgo, vEgoX, vEgoY)
        assignn(vEgoX, 15)
        assignn(vEgoDirection, directionRight)
        set.dir(objEgo, vEgoDirection)
        position.v(objEgo, vEgoX, vEgoY)
        assignn(vEgoEdgeTouched, edgeNone)
    }

    if(equaln(vEgoEdgeTouched, edgeRight)) {
        get.posn(objEgo, vEgoX, vEgoY)
        assignn(vEgoX, 5)
        assignn(vEgoY, 100)
        assignn(vRoomInited, valFalse)
        assignn(vCurrentRoom, picDavWolfE1)     
    }

    if(equaln(vEgoEdgeTouched, edgeBottom)) {
        get.posn(objEgo, vEgoX, vEgoY)
        assignn(vEgoY, 50)
        assignn(vEgoEdgeTouched, edgeNone)
        assignn(vRoomInited, valFalse)
        assignn(vCurrentRoom, picDavLakeD2)     
    }
}

if(equaln(vEgoDirection, directionStopped)) {
    stop.cycling(objEgo)
}
if(!equaln(vEgoDirection, directionStopped)) {
    start.cycling(objEgo)
}

if(said("enter", "bucket")) {
    load.view(viewRogerBucket)
    erase(objBucket)
    set.view(objEgo, viewRogerBucket)
    position(objEgo, 37, 145)
    set.priority(objEgo, 11)
    stop.cycling(objEgo)
    set.cel(objEgo, 0)
    set(fInBucket)
    addn(vCurPoints, 1)
}

if(said("exit", "bucket")) {
    set.view(objEgo, viewRoger)
    set.view(objBucket, viewBucket)
    draw(objBucket)
    stop.cycling(objBucket)
    position(objEgo, 42, 110)
    position(objBucket, 38, 120)
}

if(isset(fInBucket)){
    end.of.loop(objEgo, fDoAction)    
}

if(isset(fDoAction)) {
    get.posn(objEgo, vEgoX, vEgoY)
    assignn(vEgoX, 0)
    assignn(vEgoY, 0)
    assignn(vRoomInited, valFalse)
    assignn(vCurrentRoom, picDavWellBottom)   
}

return()

#message 1 "Welltop"
